1. what makes react special ? and what makes choosing react over the compitation ? 
trade off's in react design ? what you are giving up of things if you want to go with react ? 

History : Created by facebook, in 2011, later used by Instagram in 2012, 2013 open sourced .
in 2014 many outside companies adapted to React so this lead to creat React Native in 2015 (you can create native IOS applications 
for IOS and Android)

Whats now ? over 30 k components used by facebook and fb used react native for mobile development. now many of the fortune
500 compnaines utilise react in their production environment. 

Why React: 
----------
Flexibility :
-------------
React is a library not a framework 
where react created, it is created for single focus in mind to create componenets for web applciations.
You can create V.R applications using react VR 
Mobile applications using React Native
Desktop applications using tool Electron 
server rendering using Next JS ...
so finally learn react and apply any where... 


React DOM : There are different react renders ... serverside rendering you can strart with small portion 
of server side and implement and move to bigger implementations... so you can do risk free moment to React..

Developer experience :  
----------------------
simple Api and easy to learn.There are very few concepts to master. it is very small and 
straight forword so that developers no need to depend on docs.so it just fits in your head.

JSX compiles down to Javascript (For HTML element --> react.createElement). prefer using jsx as it almost looks like HTML..
Treditional javascript frameworks like Angular, ember, view try to enhace the HTML or ( make the hTMl more powerful)
like adding looping ( ex: angular ng-for, ng-if ng-else, ng-show etc...)
but react exactly did the opposite ..It trys to handle html with Javascript available functions to fullest (you dont need to
learn new framework specific, new keywords, syntax, for conditionals looping..etc.. for example javascript already has a 
function called map to iterate over the loop. React encourages to be better at Javascript in doing so you also get better 
at React.. 

In react each component is atomic ..that means each componenet works independently (works in isolation). if you make a mistake
you get a detailed error message in the browser. You will get compile time message.. 
IF you want to debug the code it is easy to set a break point and debug the code. 

Create React App : Most popular way to create React apps. 

Corporate Investment: 
---------------------


Community support :
-------------------
Performace : 
-------------
Javascript is fast, But updating the DOM is expensive,  So the react team figured efficient way to update the DOM.
Before react most frame works un intelligently update the DOM, to reflect the State, In most cases this lead to often lead to 
significantly update the complete dom enven though minor change is there.

React monitors the each component state, when a component state changes react compares the existing DOM state and new DOM state looks 
like and it determines the most effective way to update the DOM. THe comparison happnes in memory so the updates are very fast. 
React with React DOM only ~35k (There are much lesser size libraries availalbe, with little less funcitonality than react)
-------------
Testability : Testing a front end is hard, It is designed as friendly for automated testing. If you are using create react app then 
testing is already configured for you. You dont need browser to test react apps , the testing you can perform in-memory.
(so they are fast), jest (Is created by Facebook - This provides the Instant feedback, so you can save lot of 
development time) and enzyme (developed by airBNB )you can write react tests.
============
Tradeo ffs :
-----------
1. Framework/Library - React is library - Here is the advantage of choosing a framework approach - contains more clear 
opinions, so you dont have to waste time on decision making, so you can avoid decision fatigue, enforce more consistency.

How ever react libary has some clear advantages, it is so small (~35k) so that you can sprinkle it on exisitng applications.
slowly you can migrate all the app, even server side rendered app. Suppose you have already existing app build on Ruby or c# or java
you can use react to replace single componnet on the page. THis how face book slowly migrated from server side rendered PHP application 
to react. 

Use case : you can pull in from the list what you need (Other libraries like routing, testing, internatilisation etc... )

2. concise vs Explict:
---------------------
3.
4.
5.
6.

--------------
why not react ? 
--------------
What is the Key componnets ?

5 key decessions ? 


weakness ? 
